---
// se ejecuta en el servidor o en build time <----
const { title } = Astro.props
import { CardBody, CardContainer, CardItem } from "./ui/3d-card";
---

<section class="slide-section">
  <CardContainer client:visible className="inter-var">
    <CardBody client:visible className="p-6 m-auto h-full w-full bg-gray-50 relative group/card dark:hover:shadow-2xl dark:hover:shadow-red-500/[0.1] dark:bg-slate-800 dark:border-white/[0.2] border-black/[0.1] rounded-xl border">
      <CardItem
        client:load
        translateZ="50"
        className="text-xl font-bold text-neutral-600 dark:text-white"
      >
      <h2 class="z-20">{title}</h2>
      </CardItem>
      <CardItem
        client:load
        translateZ="100"
        rotateX={20}
        rotateZ={-10}
        className="w-full mt-4"
      >
        <slot />
      </CardItem>
    </CardBody>
  </CardContainer>
</section>

<script>
  // Detecta preferencias de reducción de movimiento
  const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
  
  if (prefersReducedMotion) {
    document.documentElement.classList.add('reduced-motion');
  }
</script>

<style>
  section {
    position: relative;
    max-width: 700px;
  }

  h2 {
    margin-bottom: 8px;
    font-weight: 700;
    line-height: 1.5;
    font-size: 1.5rem;
  }

  @media (width <= 700px) {
    section {
      margin-bottom: 38px;
    }
  }

  /* Sistema de animación mejorado que evita CLS */
  .slide-section {
    opacity: 0;
    transform: translateX(50px);
    transition: opacity 0.6s ease, transform 0.6s ease, visibility 0.6s;
  }

  /* Clase que se aplicará después para iniciar las animaciones */
  .slide-section.animate {
    animation: slideIn 0.6s ease forwards;
    animation-delay: calc(var(--section-index, 0) * 0.5s);
  }

  /* Desactiva animaciones si el usuario prefiere reducir movimiento */
  :root.reduced-motion .slide-section {
    opacity: 1;
    transform: none;
    animation: none;
    transition: none;
  }
  
  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
</style>

<script>
  // Detecta preferencias de reducción de movimiento
  const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
  
  if (prefersReducedMotion) {
    document.documentElement.classList.add('reduced-motion');
  }

  // Asignar índices a cada sección y activar animaciones solo después de 2 segundos
  document.addEventListener('DOMContentLoaded', () => {
    const sections = document.querySelectorAll('.slide-section');
    
    // Primero asignamos todos los índices
    sections.forEach((section, index) => {
      (section as HTMLElement).style.setProperty('--section-index', index.toString());
    });
    
    // Esperar 2 segundos antes de iniciar las animaciones
    setTimeout(() => {
      // Activar las animaciones después del tiempo de espera
      sections.forEach((section) => {
        section.classList.add('animate');
      });
    }, 500);
  });
</script>
